name: STM32MP157 Build

on:
  push:
    branches:
      - main  # Триггер на пуши в ветку main
  pull_request:
    branches:
      - main  # Триггер на пул-реквесты в ветку main

env:
  ARCH: arm
  CROSS_COMPILE: arm-none-eabi-

jobs:
  build:
    runs-on: ubuntu-latest  # Используем последнюю версию Ubuntu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4  # Клонируем репозиторий

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget bzip2 \
        python3 python3-pip python3-setuptools python3-wheel \
        device-tree-compiler bc u-boot-tools libgnutls28-dev \
        gcc-arm-none-eabi  # Установите кросс-компилятор для ARM

    - name: Check ARM compiler version
      run: |
        arm-none-eabi-gcc --version

    - name: Cache U-Boot
      uses: actions/cache@v3
      with:
        path: u-boot
        key: u-boot-${{ runner.os }}-${{ hashFiles('u-boot/**') }}
        restore-keys: |
          u-boot-${{ runner.os }}-

    - name: Build U-Boot
      run: |
        git clone https://github.com/u-boot/u-boot.git
        cd u-boot
        make stm32mp15_defconfig
        make -j$(nproc)

    - name: Cache Linux Kernel
      uses: actions/cache@v3
      with:
        path: linux
        key: linux-${{ runner.os }}-${{ hashFiles('linux/**') }}
        restore-keys: |
          linux-${{ runner.os }}-

    - name: Clone Linux Kernel
      run: |
        git clone https://github.com/STMicroelectronics/linux.git
        cd linux
        git checkout v6.1-stm32mp  # Переключаемся на стабильный тег

    - name: List available defconfigs
      run: |
        cd linux
        ls arch/arm/configs/

    - name: Generate kernel configuration
      run: |
        cd linux
        make stm32_defconfig # stm32mp157c-dk2_defconfig 

    - name: Modify kernel configuration
      run: |
        cd linux
        sed -i 's/CONFIG_XIP_KERNEL=y/# CONFIG_XIP_KERNEL is not set/' .config

    - name: Build Linux Kernel
      run: |
        cd linux
        make -j$(nproc) uImage dtbs

    - name: Cache Buildroot
      uses: actions/cache@v3
      with:
        path: buildroot-2024.02.10
        key: buildroot-${{ runner.os }}-${{ hashFiles('buildroot-2024.02.10/**') }}
        restore-keys: |
          buildroot-${{ runner.os }}-

    - name: Build RootFS
      run: |
        wget https://buildroot.org/downloads/buildroot-2024.02.10.tar.gz
        tar -xzvf buildroot-2024.02.10.tar.gz
        cd buildroot-2024.02.10
        make stm32mp157c_dk2_defconfig
        make -j$(nproc)

    - name: Package Image
      run: |
        mkdir -p output
        cp u-boot/u-boot.bin output/
        cp linux/arch/arm/boot/uImage output/
        cp linux/arch/arm/boot/dts/stm32mp157c-dk2.dtb output/
        cp buildroot-2024.02.10/output/images/rootfs.cpio.gz output/
        tar -czvf stm32mp157_image.tar.gz -C output .

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: stm32mp157_image
        path: stm32mp157_image.tar.gz